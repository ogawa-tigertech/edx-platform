// container - content
// ==========================
// The container view renders xblocks three levels deep: Page Level, Nesting Level, and Element Level.

// For containers rendered at the element level, the container is rendered in a way that allows the user to navigate to a separate container page for that container making its children populat the nesting and element levels.

// Container Page View Styling
body.view-container {

  .mast {
    border-bottom: none;
    padding-bottom: 0px;
  }

  .content-primary {
    float: left;
    clear: both;
    width: 70%;
  }

  .content-supplementary {
    float: right;
    padding: $baseline;
    width: 28%;

    label {
      @extend %t-title8;
    }
  }
}

// xBlock Page Level Styling
body.view-container {
  .xblock-wrapper-pagelevel {
    margin: 0px;

    .xblock-header {
      display: none;

      .xblock-details {
        font-size: 1.1em;
      }
    }

    .xblock-render {
      background: none;
    }

    .xblock-list { }

    .xblock-listitem { }
  }

  // xBlock Nesting Level Styling
  .xblock-wrapper-nestinglevel {
    margin: ($baseline/2);
    border: none;
    padding-bottom: ($baseline/2);
    min-height: ($baseline*6);
    box-shadow: none;

    &:hover {
      background-color: $shadow-l3;
      box-shadow: 0 0 1px $shadow-d2 inset;
    }

    .xblock-header {
      display: block;
      margin-bottom: ($baseline/2);
      border-bottom: none;
      background: none;
      box-shadow: none;

      .xblock-details {
        font-size: 1em;
      }
    }

    .xblock-render { }

    .xblock-list { }

    .xblock-listitem { }
  }

  // xBlock Element Level Styling
  .xblock-wrapper-elementlevel {
    margin: 0px ($baseline*2) $baseline ($baseline*2);
    border-radius: $baseline/4;
    background-color: $white;
    box-shadow: none;

    &:hover {
      @include transition(all $tmg-f2 linear 0s);
      border-color: $blue;
      box-shadow: 0px 0px 1px $shadow;

    }

    // this & styling section duplicated on unit page to enable linking to (initially) read-only container views
    &.xblock-type-container {

      .xblock-header {
        margin-bottom: 0px;
        border-bottom: 0px;
        border-radius: ($baseline/5);

        .xblock-details {
          font-size: .9em;
        }
      }

      .xblock-render {
        display: none;
      }
    }

    .xblock-header {
      margin-bottom: 0px;
      border-bottom: 1px solid $gray-l4;
      background-color: $gray-l6;
      font-weight: 300;
      font-size: .9em;
    }

    .xblock-render {
    }
  }
}

// ====================

// Unit Page Styling
// The remainder of this document is legacy styling carried over from _unit.scss, which _container.scss and _xblock.scss were based on. Until testing has been completed for all container rendering using this legacy styling, it will be left below. As styling is migrated up into the area above, it will be removed from this section. (#TODO)

body.course.container,.view-container {

  .main-wrapper {
    margin-top: ($baseline*2);
  }

  //Problem Selector tab menu requirements
  .js .tabs .tab {
   display: none;
  }
  //end problem selector reqs


  .content-primary {

    h2 {
      margin: 30px 40px 30px 0px;
      color: #646464;
      text-transform: uppercase;
      letter-spacing: 1px;
      font-weight: 300;
      font-size: 19px;
    }

    // ====================

    // Component List Meta
    .components {

      > li {

        // ====================
        // New Components
        &.new-component-item {
          margin: $baseline 0px;
          margin-bottom: 0px;
          border-top: 1px solid $mediumGrey;
          padding-bottom: $baseline;
          background-color: $lightGrey;
          box-shadow: 0 2px 1px rgba(182, 182, 182, 0.75) inset;

          .new-component-button {
            display: block;
            padding: $baseline;
            color: #edf1f5;
            text-align: center;
          }

          h5 {
            margin: $baseline 0px;
            color: #fff;
            font-weight: 600;
            font-size: 18px;
          }

          .rendered-component {
            display: none;
            border-radius: 3px 3px 0px 0px;
            background: #fff;
          }

          .new-component-type {

            a,
            li {
              display: inline-block;
            }

            a {
              margin-right: 15px;
              margin-bottom: $baseline;
              border: 1px solid $mediumGrey;
              border-radius: 8px;
              width: 100px;
              height: 100px;
              box-shadow: 0 1px 1px rgba(0, 0, 0, .2), 0 1px 0 rgba(255, 255, 255, .4) inset;
              color: #fff;
              text-align: center;
              font-size: 15px;
              line-height: 14px;

              .name {
                @include box-sizing(border-box);
                position: absolute;
                bottom: 5px;
                left: 0px;
                padding: $baseline/2;
                width: 100%;
                color: #fff;
              }
            }
          }

          .new-component-templates {
            @include clearfix;
            display: none;
            margin: $baseline 2*$baseline;
            border: 1px solid $mediumGrey;
            border-radius: 3px;
            background-color: #fff;
            box-shadow: 0 1px 1px rgba(0, 0, 0, .2), 0 1px 0 rgba(255, 255, 255, .4) inset;

            .cancel-button {
              @include white-button;
              margin: $baseline 0px $baseline/2 $baseline/2;
            }

            .problem-type-tabs {
              display: none;
            }

            // specific menu types
            &.new-component-problem {
              padding-bottom: $baseline/2;

              [class^="icon-"], .editor-indicator {
                display: inline-block;
              }

              .problem-type-tabs {
                display: inline-block;
              }
            }
          }

          .new-component-type,
          .new-component-template {
            @include clearfix;

            a {
              position: relative;
              border: 1px solid $darkGreen;
              background: tint($green,20%);
              color: #fff;

              &:hover {
                background: $brightGreen;
              }
            }
          }

          .problem-type-tabs {
            @include linear-gradient(top, rgba(255, 255, 255, .4), rgba(255, 255, 255, 0));
            border-radius: 0;
            width: 100%;
            background-color: $lightBluishGrey;
            box-shadow: 0 1px 0 rgba(255, 255, 255, 0.2) inset, 0 -1px 0 rgba(0, 0, 0, 0.2) inset;
            list-style-type: none;

            li:first-child {
              margin-left: $baseline;
            }

            li {
              @include linear-gradient(top, rgba(255, 255, 255, .4), rgba(255, 255, 255, 0));
              display:inline-block;
              float:left;
              width: auto;
              background-color: tint($lightBluishGrey, 10%);
              box-shadow: 0 1px 0 rgba(255, 255, 255, 0.2) inset, 0 -1px 0 rgba(0, 0, 0, 0.2) inset;
              text-align:center;
              opacity: 0.8;

              &:hover {
                background-color: tint($lightBluishGrey, 20%);
                opacity: 0.9;
              }

              &.ui-state-active {
                @include active;
                border: 0px;
                opacity: 1.0;
              }
            }

            a {
              display: block;
              padding: 15px 25px;
              color: #3c3c3c;
              text-align: center;
              text-shadow: 0 1px 0 rgba(255, 255, 255, 0.3);
              font-size: 15px;
              line-height: 16px;
            }
          }

          .new-component-template {

            a {
              @include transition(none);
              border: 0px;
              background: #fff;
              color: #3c3c3c;

              &:hover {
                @include transition(background-color $tmg-f2 linear 0s);
                background: tint($green,30%);
                color: #fff;
              }
            }

            li {
                border:none;
                border-bottom: 1px dashed $lightGrey;
                color: #fff;
            }

            li:first-child {
              a {
                border-top: 0px;
              }
            }

            li:nth-child(2) {
              a {
                border-radius: 0px;
              }
            }

            a {
              @include clearfix();
              display: block;
              border-bottom: none;
              padding: 7px $baseline;
              font-weight: 500;

              .name {
                float: left;

                [class^="icon-"] {
                  @include transition(opacity $tmg-f2 linear 0s);
                  top: 1px;
                  display: inline-block;
                  margin-right: 5px;
                  width: 17;
                  height: 21px;
                  vertical-align: middle;
                  opacity: 0.5;
                }
              }

              .editor-indicator {
                @include transition(opacity $tmg-f2 linear 0s);
                position: relative;
                top: 3px;
                float: right;
                font-size: 12px;
                opacity: 0.3;
              }

              [class^="icon-"], .editor-indicator {
                display: none;
              }

              &:hover {
                color: #fff;

                [class^="icon-"] {
                  opacity: 1.0;
                }

                .editor-indicator {
                  opacity: 1.0;
                }
              }
            }

            // specific editor types
            .empty {

              a {
                background: #fff;
                color: #3c3c3c;
                font-weight: 400;
                line-height: 1.4;


                &:hover {
                background: tint($green,30%);
                color: #fff;
              }
              }
            }
          }

          .new-component {
            text-align: center;

            h5 {
              color: $darkGreen;
            }

          }
        }

      .wrapper-alert-error {
          margin-top: ($baseline*1.25);
          border-top: 5px solid $red-l1;
          box-shadow: none;

          .copy,
          .title {
            color: $white;
          }

      }


      }
    }

    // ====================

    // Component Drag and Drop, Non-Edit Module Rendering, Styling
    .component {
      @include transition(none);
      border: 1px solid $lightBluishGrey2;
      border-radius: 3px;
      background: #fff;

      &:hover {
        border-color: #6696d7;

        .drag-handle {
          border-color: $blue;
          background-color: $blue;
        }
      }

      &.editing {
        z-index: auto;
        border: 1px solid $lightBluishGrey2;

        .drag-handle,
        .component-actions {
          display: none;
        }
      }

      &.component-placeholder {
        border-color: #6696d7;
      }

      .drag-handle {
        @include transition(none);
        position: absolute;
        top: -1px;
        right: -16px;
        z-index: 10;
        display: block;
        border: 1px solid $lightBluishGrey2;
        border-radius: 0 3px 3px 0;
        width: 15px;
        height: 100%;
        background: url(../img/white-drag-handles.png) center no-repeat $lightBluishGrey2;
        cursor: move;
      }
    }

    .xmodule_display {
      overflow-x: auto;
      padding: 2*$baseline $baseline $baseline;

      h1 {
        float: none;
        margin-left: 0;
      }
    }

    // UI: DnD - specific elems/cases - unit
    .courseware-unit {

      // STATE: was dropped
      &.was-dropped {

        > .section-item {
          background-color: $ui-update-color !important; // nasty, but needed for specificity
        }
      }
    }

    // ====================

    // Component Editing
    .wrapper-component-editor {
      position: relative;
      z-index: 9999;
      background: $white;
    }

    .component-editor {
      @include edit-box;
      display: none;
      border-radius: 2px 2px 0 0;
      padding: 0;
      box-shadow: none;

      h3 {
        margin-bottom: $baseline/2;
        font-weight: 700;
        font-size: 18px;
      }

      h5 {
        margin-bottom: 8px;
        color: #fff;
        font-weight: 700;
      }

      .row {
        margin-bottom: 0px;
      }

      // Module Actions, also used for Static Pages
      .module-actions {
        border-top: 1px solid $gray-l1;
        padding: ($baseline*0.75) $baseline;
        background: $gray-l6;
        box-shadow: inset 0 1px 2px $shadow;

        .action {
          display: inline-block;
          margin-right: ($baseline/4);
          vertical-align: middle;

          &:last-child {
            margin-right: 0;
          }
        }

        .action-primary {
          @include blue-button;
          @extend %t-action2;
          @include transition(all .15s);
          display: inline-block;
          padding: ($baseline/5) $baseline;
          text-transform: uppercase;
          font-weight: 600;
        }

        .action-secondary {
          @include grey-button;
          @extend %t-action2;
          @include transition(all .15s);
          display: inline-block;
          padding: ($baseline/5) $baseline;
          text-transform: uppercase;
          font-weight: 600;
        }
      }
    }
  }
}

// Edit Header (Component Name, Mode-Editor, Mode-Settings)
.component-edit-header {
  @include box-sizing(border-box);
  top: 0;
  right: 0;
  border-bottom: 1px solid $blue-d2;
  padding: 18px 0 18px $baseline;
  background-color: $blue;
  color: $white;

  //Component Name
  .component-name {
    @extend %t-copy-sub1;
    width: 50%;
    color: $white;
    font-weight: 600;

    em {
      display: inline-block;
      margin-right: ($baseline/4);
      color: $white;
      font-weight: 400;
    }
  }

  //Nav-Edit Modes
  .nav-edit-modes {
    position: absolute;
    top: 0;
    right: 0;
    padding: 12px ($baseline*0.75);
    list-style: none;

    .mode {
      display: inline-block;
      margin-left: 8px;

      &.inactive-mode{
        display: none;
      }

      &.active-mode a {

        @include blue-button;

        &.is-set {
          @include linear-gradient($blue, $blue);
          background-color: $blue-d4;
          box-shadow: inset 0 1px 2px 1px $shadow-l1;
          color: $blue-d1;
          cursor: default;

          &:hover {
            box-shadow: inset 0 1px 2px 1px  $shadow;
          }
        }
      }
    }
  }
}

// Editor Wrapper
.wrapper-comp-editor {
  display: block;

  // Because the editor may be a CodeMirror editor (which must be visible at the time it is created
  // in order for it to properly initialize), we must toggle "is-inactive" instead of the more common "is-active".
  &.is-inactive {
    display: none;
  }
}

// Settings Wrapper
.wrapper-comp-settings {
  display: none;

  &.is-active {
    display: block;
  }

  //settings-list
  .list-input.settings-list {

    overflow: auto;
    margin: 0;
    padding: 0;
    max-height: 400px;
    list-style: none;

    //chrome scrollbar visibility correction
    &::-webkit-scrollbar {
      width: 11px;
      height: 11px;
      -webkit-appearance: none;
    }

    &::-webkit-scrollbar-thumb {
      border: 2px solid $gray-l2;
      border-radius: 8px;
      background-color: rgba(0, 0, 0, .5);
    }

    //component-setting-entry
    .field.comp-setting-entry {
      border-bottom: 1px solid $gray-l2;
      padding: $baseline;
      background-color: $white;
      opacity: 0.7;

      &:last-child {
        //margin-bottom: 0;
      }

      //no required component settings currently
      &.required {
        label {
          //font-weight: 600;
        }
        label:after {
          //margin-left: ($baseline/4);
          //content: "*";
        }
      }

      &:hover {
        @include transition(opacity $tmg-f2 ease-in-out 0s);
        opacity: 1.0;
      }

      &.is-set {
        background-color: $white;
        opacity: 1.0;

        .setting-input {
          color: $blue-l1;
        }
      }

      .wrapper-comp-setting {
        position: relative;
        top: 0;
        display: inline-block;
        margin-bottom:5px;
        min-width: 300px;
        width: 55%;
        vertical-align: top;
      }

      .setting-label {
        @extend %t-copy-sub1;
        @include transition(color $tmg-f2 ease-in-out 0s);
        position: relative;
        left: 0;
        display: inline-block;
        margin-right: ($baseline/2);
        min-width: 100px;
        width: 33%;
        vertical-align: middle;
        font-weight: 600;

        &.is-focused {
          color: $blue;
        }
      }

      input, select, input[type="number"] {
        @include placeholder($gray-l4);
        @include font-size(16);
        @include size(100%,100%);
        border: 1px solid $gray-l2;

        //&.long {
          //
        //}

        //&.short {
        //}

        //&.error {
        // border-color: $red;
        //}

        //&:focus {
        //  + .tip {
        //    color: $gray;
        //  }
        border-radius: 3px;
        padding: ($baseline/2);
        min-width: 100px;
        width: 45%;
        text-overflow: ellipsis;
      }

      //Allows users to copy full value of disabled inputs.
      input.is-disabled{
        text-overflow: clip;
        opacity: .5;
      }

      input[type="number"] {

        width: 38.5%;
        box-shadow: 0 1px 2px $shadow-l1 inset;
        //For webkit browsers which render number fields differently, make input wider.
        -moz-column-width: {
          width: 32%;
        }

        &:active {
          background-color: #FFFCF1;
        }
      }

      select {
        //box-shadow: 0 1px 2px $shadow-l1 inset;

        &:focus {
          @include transition(opacity $tmg-f2 ease-in-out 0s);
          background-color: $yellow;
          box-shadow: 0 0 1px $shadow;
        }

        &:active {
          background-color: $yellow;
        }
      }

      .action.setting-clear {
        @include font-size(11);
        margin: 0 $baseline/2;
        border: 1px solid $gray-l1;
        border-radius: 50%;
        padding: 5px;
        width: 25px;
        height: 25px;
        background-color: $gray-l4;
        box-shadow: none;
        color: $gray;
        vertical-align: middle;
        text-shadow: none;

        &:hover {
          @include transition(opacity $tmg-f2 ease-in-out 0s);
          border: 1px solid $blue-s3;
          background-color: $blue-s3;
          box-shadow: 0 1px 1px $shadow;
          color: $white;
        }

        &.inactive {
          visibility: hidden;
        }
      }

      .setting-help {
        @include font-size(12);
        display: inline-block;
        min-width: ($baseline*10);
        width: 35%;
        vertical-align: top;
        font-color: $gray-l6;
      }



      // TYPE: enumerated lists of metadata sets
      .metadata-list-enum {

        * {
          @include box-sizing(border-box);
        }

        // label
        .setting-label {
          margin-top: ($baseline/2);
          vertical-align: top;
        }

        // inputs and labels
        .wrapper-list-settings {
          @include size(45%,100%);
          display: inline-block;
          min-width: ($baseline*5);

          // enumerated fields
          .list-settings {
            margin: 0;

            .list-settings-item {
              margin-bottom: ($baseline/2);
            }

            // inputs
            .input {
              margin-right: ($baseline/2);
              width: 80%;
              vertical-align: middle;
            }
          }
        }

        // actions
        .create-action, .remove-action, .setting-clear {

        }

        .setting-clear {
          margin-top: ($baseline/4);
          vertical-align: top;
        }

        .create-setting {
          @extend %ui-btn-flat-outline;
          @extend %t-action3;
          display: block;
          padding: ($baseline/2);
          width: 100%;
          font-weight: 600;

          *[class^="icon-"] {
            margin-right: ($baseline/4);
          }

          // STATE: disabled
          &.is-disabled {

          }
        }

        .remove-setting {
          @include transition(color 0.25s ease-in-out);
          @include font-size(20);
          display: inline-block;
          background: transparent;
          color: $blue-l3;

          &:hover {
            color: $blue;
          }

          // STATE: disabled
          &.is-disabled {

          }
        }
      }
    }
  }
}


// ====================

// Unit Page Sidebar

.unit-settings {

  .window-contents {
    padding: $baseline/2 $baseline;
  }

  .unit-actions {
    border-bottom: none;
    padding-bottom: 0;
  }

  .published-alert {
    display: none;
    border: 1px solid #edbd3c;
    border-radius: 3px;
    padding: $baseline/2;
    background: #fbf6e1;
    font-size: 14px;
    line-height: 1.4;

    div {
      margin-top: 15px;
    }
  }



  input[type="radio"] {
      margin-right: 7px;
  }

  .status {
    @extend %t-copy-sub2;

    strong {
      font-weight: 700;
    }
  }

  .preview-button, .view-button {
    @include white-button;
    margin-bottom: $baseline/2;
  }

  .publish-button {
    @include orange-button;
  }

  .delete-button {
    @include blue-button;
  }

  .delete-draft {
    display: inline-block;
  }

  .delete-button,
  .preview-button,
  .publish-button,
  .view-button {
    margin-top: $baseline/2;
    padding: 6px 15px 8px;
    font-size: 11px;
  }
}


.edit-state-draft {
  .visibility,

  .edit-draft-message,
  .view-button {
    display: none;
  }

  .published-alert {
    display: block;
  }
}

.edit-state-public {
  .delete-draft,
  .wrapper-component-action-header,
  .new-component-item,
  .editing-draft-alert,
  .publish-draft-message,
  .preview-button {
    display: none;
  }

  .published-alert {
    display: block;
  }

  .drag-handle {
    display: none !important;
  }
}

.edit-state-private {
  .delete-draft,
  .publish-draft,
  .editing-draft-alert,
  .create-draft,
  .view-button {
    display: none;
  }
}
// ====================

// Latex Compiler
.launch-latex-compiler {
  border-bottom: 1px solid $gray-l2;
  padding: $baseline/2 0 $baseline/2 $baseline;
  background-color: $white;
  opacity: 0.8;


  &:hover {
    @include transition(opacity $tmg-f2 ease-in-out 0s);
    opacity: 1.0s;
  }
}

//  hides latex compiler button if settings mode is-active
div.wrapper-comp-editor.is-inactive ~ div.launch-latex-compiler{
 display: none;
}
